;DEFINE

define YPOS $10

define XPOS $11

define FIRST_BAND $01

define SECOND_BAND $02

define THIRD_BAND $03

define FOURTH_BAND $04



; ROM routines

define		SCINIT		$ff81 ; initialize/clear screen

define		CHRIN		$ffcf ; input character from keyboard

define		CHROUT		$ffd2 ; output character to screen

define		SCREEN		$ffed ; get screen size

define		PLOT		$fff0 ; get/set cursor coordinates



	LDA #00

	STA $11

	LDA #01

	STA $10

	JSR DRAW_RESISTOR

	JSR PRINT

	DCB "F", "o", "u", "r", 20, "b", "a", "n", "d", 20, "r", "e", "s", "i", "s", "t", "o", "r", 20, "c", "a", "l", "c", "u", "l", "a", "t", "o", "r", $0D, $0D, 0



	JSR SHOW_COLOR_LIST



	JSR PRINT

	DCB "E", "n", "t", "e", "r", 20, "1", "s", "t", 20, "r", "e", "s",  "i", "s", "t", "o", "r", 20, "b", "a", "n", "d", 20, "c", "o", "l", "o", "r", ":", 20, 0

	JSR GET_USER_INPUT

	JSR SET_COLOR

	JSR DRAW_RESISTOR_BAND_1



	JSR PRINT

	DCB $0D, "E", "n", "t", "e", "r", 20, "2", "n", "d", 20, "r", "e", "s",  "i", "s", "t", "o", "r", 20, "b", "a", "n", "d", 20, "c", "o", "l", "o", "r", ":", 20, 0

	JSR GET_USER_INPUT

	JSR SET_COLOR

	JSR DRAW_RESISTOR_BAND_2



	JSR PRINT

	DCB $0D, "E", "n", "t", "e", "r", 20, "3", "r", "d", 20, "r", "e", "s",  "i", "s", "t", "o", "r", 20, "b", "a", "n", "d", 20, "c", "o", "l", "o", "r", ":", 20, 0

	JSR GET_USER_INPUT

	JSR SET_COLOR

	JSR DRAW_RESISTOR_BAND_3



	JSR PRINT

	DCB $0D, "E", "n", "t", "e", "r", 20, "4", "t", "h", 20, "r", "e", "s",  "i", "s", "t", "o", "r", 20, "b", "a", "n", "d", 20, "c", "o", "l", "o", "r", ":", 20, 0

	JSR GET_USER_INPUT

	JSR SET_COLOR

	JSR DRAW_RESISTOR_BAND_4



	JSR CALCULATE_RESISTOR



	BRK



;SUBROUTINES



CALCULATE_RESISTOR:

	JSR PRINT

	DCB $0D, $0D, "T", "h", "i", "s", 20, "i", "s", 20, "a", 20, 0



	LDA $01

	CLC

	ADC #$30

	STA $00

	JSR CHROUT



	LDA $02

	CLC

	ADC #$30

	STA $00

	JSR CHROUT



	LDA $03

	JSR CALCULATE_MULTIPLIER

	

	JSR PRINT

	DCB 20, "O", "h", "m", "s", 20, 0



	JSR DISPLAY_TOLERANCE



	JSR PRINT

	DCB 20, "r", "e", "s", "i", "s", "t", "o", "r", 0

	

	RTS

	

CALCULATE_MULTIPLIER:

	TAY

	LDA #$30

LOOP_MULTIPLIER:

	CPY #$00

	BEQ RETURN_MULTIPLIER

	JSR CHROUT

	DEY

	CPY #$00

	BNE LOOP_MULTIPLIER



	RTS

	

RETURN_MULTIPLIER:

	RTS

	

DISPLAY_TOLERANCE:

	LDA #$30

	CLC

	ADC $04

	STA $04

	CMP #$67

	BEQ FIVE_PERCENT

	CMP #$73

	BEQ TEN_PERCENT

	BNE RETURN_TOLERANCE



RETURN_TOLERANCE:

	RTS



FIVE_PERCENT:

	JSR PRINT

	DCB "+", "-", "5", "%",  0

	RTS



TEN_PERCENT:

	JSR PRINT

	DCB "+", "-", "1", "0", "%",  0

	RTS



GET_USER_INPUT:

	LDY YPOS

	LDX XPOS

	JSR CHRIN

	CMP #$00

	BEQ GET_USER_INPUT

	SEC

	;LDA YPOS

	JSR CHROUT

	SBC #$30

	STA (XPOS), Y

	INC YPOS

	RTS



SET_COLOR:

	CMP #$01

	BEQ SET_BROWN

	CMP #$03

	BEQ SET_ORANGE

	CMP #$04

	BEQ SET_YELLOW

	CMP #$07

	BEQ SET_PURPLE

	CMP #$08

	BEQ SET_GRAY

	CMP #$09

	BEQ SET_WHITE

	CMP #$43

	BEQ SET_LIGHT_GRAY

	RTS



SET_BROWN:

	LDA #$09

	RTS



SET_ORANGE:

	LDA #$08

	RTS



SET_YELLOW:

	LDA #$07

	RTS



SET_PURPLE:

	LDA #$04

	RTS



SET_GRAY:

	LDA #$0C

	RTS



SET_WHITE:

	LDA #$01

	RTS



SET_LIGHT_GRAY:

	LDA #$0F

	RTS



DRAW_RESISTOR_BAND_1:

        STA $036B	

        STA $036C

        STA $038B	

        STA $038C

        STA $03AB	

        STA $03AC

        STA $03CB	

        STA $03CC

        STA $03EB	

        STA $03EC

        STA $040B	

        STA $040C

        STA $042B	

        STA $042C

        STA $044B	

        STA $044C

        STA $046B	

        STA $046C

        STA $048B	

        STA $048C

	RTS



DRAW_RESISTOR_BAND_2:

        STA $036E	

        STA $036F

        STA $038E	

        STA $038F

        STA $03AE	

        STA $03AF

        STA $03CE	

        STA $03CF

        STA $03EE	

        STA $03EF

        STA $040E	

        STA $040F

        STA $042E	

        STA $042F

        STA $044E	

        STA $044F

        STA $046E	

        STA $046F

        STA $048E	

        STA $048F

	RTS



DRAW_RESISTOR_BAND_3:

        STA $0371	

        STA $0372

        STA $0391	

        STA $0392

        STA $03B1	

        STA $03B2

        STA $03D1	

        STA $03D2

        STA $03F1	

        STA $03F2

        STA $0411	

        STA $0412

        STA $0431	

        STA $0432

        STA $0451	

        STA $0452

        STA $0471	

        STA $0472

        STA $0491	

        STA $0492

	RTS



DRAW_RESISTOR_BAND_4:

	STA $0374

        STA $0394

        STA $03B4

        STA $03D4

        STA $03F4

        STA $0414

        STA $0434

        STA $0454

        STA $0474

        STA $0494	

	RTS



DRAW_RESISTOR:

	LDA #$0B	

	

	LOOP:	

	STA $0200, Y	

	STA $0300, Y	

	STA $0400, Y	

	STA $0500, Y	

	INY	

	BNE LOOP	



	LDA #$3

        STA $03E0	

        STA $03E1	

        STA $03E2	

        STA $03E3	

        STA $03E4

        STA $0400	

        STA $0401	

        STA $0402	

        STA $0403	

        STA $0404

        STA $0344

        STA $0364

        STA $0384

        STA $03A4

        STA $03C4

        STA $0325

        STA $0306	

        STA $0307	

        STA $0308	

        STA $0309

        STA $032A

        STA $034B	

        STA $034C	

        STA $034D	

        STA $034E	

        STA $034F	

        STA $0350	

        STA $0351	

        STA $0352	

        STA $0353	

        STA $0354

        STA $0335

        STA $0316	

        STA $0317	

        STA $0318	

        STA $0319

        STA $033A

        STA $035B

        STA $037B

        STA $039B

        STA $03BB

        STA $03DB

        STA $03FB	

        STA $03FC	

        STA $03FD	

        STA $03FE	

        STA $03FF

        STA $041B	

        STA $041C	

        STA $041D	

        STA $041E	

        STA $041F

        STA $043B

        STA $045B

        STA $047B

        STA $049B

        STA $04BB

        STA $04DA

        STA $04F6	

        STA $04F7	

        STA $04F8	

        STA $04F9

        STA $04D5

        STA $04AB	

        STA $04AC	

        STA $04AD	

        STA $04AE	

        STA $04AF	

        STA $04B0	

        STA $04B1	

        STA $04B2	

        STA $04B3	

        STA $04B4

        STA $04CA

        STA $04E6	

        STA $04E7	

        STA $04E8	

        STA $04E9

        STA $04C5

        STA $0424

        STA $0444

        STA $0464

        STA $0484

        STA $04A4

	RTS



; print the null-terminated string immediately after the 

; "JSR PRINT" - this is done by pulling the return address

; off the stack, processing the string, and then placing 

; the calculated return address on the stack



; zeropage locations used in this routine

define		PRINT_PTR	$20

define		PRINT_PTR_H	$21



PRINT:		PLA

		CLC

		ADC #$01

		STA PRINT_PTR

		PLA

		STA PRINT_PTR_H



		TYA

		PHA



		LDY #$00

PRINT_NEXT:	LDA (PRINT_PTR),Y

		BEQ PRINT_DONE

		

		JSR CHROUT

		INY

		JMP PRINT_NEXT



PRINT_DONE:	TYA

		CLC

		ADC PRINT_PTR

		STA PRINT_PTR



		LDA PRINT_PTR_H

		ADC #$00

		STA PRINT_PTR_H



		PLA

		TAY



		LDA PRINT_PTR_H

		PHA

		LDA PRINT_PTR

		PHA



		RTS



SHOW_COLOR_LIST:

	JSR PRINT

	DCB "0", 20, "-", 20, "B", "l", "a", "c", "k", $0D

	DCB "1", 20, "-", 20, "B", "r", "o", "w", "n", $0D

	DCB "2", 20, "-", 20, "R", "e", "d", $0D

	DCB "3", 20, "-", 20, "O", "r", "a", "n", "g", "e", $0D

	DCB "4", 20, "-", 20, "Y", "e", "l", "l", "o", "w", $0D

	DCB "5", 20, "-", 20, "G", "r", "e", "e", "n", $0D

	DCB "6", 20, "-", 20, "B", "l", "u", "e", $0D

	DCB "7", 20, "-", 20, "P", "u", "r", "p", "l", "e", $0D

	DCB "8", 20, "-", 20, "G", "r", "a", "y", $0D

	DCB "9", 20, "-", 20, "W", "h", "i", "t", "e", $0D

	DCB "g", 20, "-", 20, "G", "o", "l", "d", $0d

	DCB "s", 20, "-", 20, "S", "i", "l", "v", "e", "r", $0D, $0D, 0



	RTS

; =======================================================
